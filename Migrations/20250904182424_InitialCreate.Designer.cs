// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using csharp_url_shortener_api.Data;

#nullable disable

namespace csharp_url_shortener_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250904182424_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("csharp_url_shortener_api.Models.ProfitSharingRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ClickAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("IncreaseEveryNClicks")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxShareIncreasePercentage")
                        .HasColumnType("REAL");

                    b.Property<double>("ShareIncreasePercentage")
                        .HasColumnType("REAL");

                    b.Property<double>("SharePercentage")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("ProfitSharingRules");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ShortUrl")
                        .IsUnique();

                    b.ToTable("Urls");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.UrlClick", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountEarned")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProfitSharingRuleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UrlId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfitSharingRuleId");

                    b.HasIndex("UrlId");

                    b.HasIndex("UserId");

                    b.ToTable("UrlClicks");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.Url", b =>
                {
                    b.HasOne("csharp_url_shortener_api.Models.User", "Creator")
                        .WithMany("UrlsCreated")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.UrlClick", b =>
                {
                    b.HasOne("csharp_url_shortener_api.Models.ProfitSharingRule", "ProfitSharingRule")
                        .WithMany("UrlClicks")
                        .HasForeignKey("ProfitSharingRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("csharp_url_shortener_api.Models.Url", "Url")
                        .WithMany("UrlClicks")
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("csharp_url_shortener_api.Models.User", "User")
                        .WithMany("UrlClicks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfitSharingRule");

                    b.Navigation("Url");

                    b.Navigation("User");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.ProfitSharingRule", b =>
                {
                    b.Navigation("UrlClicks");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.Url", b =>
                {
                    b.Navigation("UrlClicks");
                });

            modelBuilder.Entity("csharp_url_shortener_api.Models.User", b =>
                {
                    b.Navigation("UrlClicks");

                    b.Navigation("UrlsCreated");
                });
#pragma warning restore 612, 618
        }
    }
}
